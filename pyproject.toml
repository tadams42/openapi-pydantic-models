[build-system]
requires = ["setuptools>=65", "wheel"]


[project]
name = "openapi-pydantic-models"
version = "1.0.0"
description = "pydantic models for OpeanAPI Specification 3.1.0 objects."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = ["OpenAPI OAS"]
license = { text = "MIT" }
authors = [{ name = "Tomislav Adamic", email = "tomislav.adamic@gmail.com" }]
dependencies = ["pydantic >= 2.0"]


[project.urls]
Source = "https://github.com/tadams42/openapi-pydantic-models"


[project.optional-dependencies]
# For dev machines
dev = [
    "ipython>=8.6.0",
    "black >= 22.1.0",
    "bump2version >= 1.0.1",
    "check-manifest >= 0.47",
    "isort >= 5.10.1",
    "pip-tools >= 6.5.1",
    "rich",
    "requests",
    "pyyaml",
]
# For dev machines and CI generating docs
docs = [
    "furo",
    "myst-parser",
    "sphinx > 5.2.0",
    "sphinx_rtd_theme",
    "sphinx-copybutton",
]
# For dev machines and CI running tests
tests = [
    "coverage",
    "factory-boy >= 3.2.1",
    "faker >= 12.3.0",
    "lorem >= 0.1.1",
    "pytest >= 7.0.1",
    "pytest-spec >= 3.2.0",
    "pytest-profiling >= 1.7.0",
    "pytest-random-order>=1.0.4",
    "pyyaml",
]


[tool.setuptools]
zip-safe = false
platforms = ["any"]
include-package-data = true


[tool.setuptools.packages.find]
where = ["src"]


[tool.isort]
profile = "black"
skip_gitignore = true


[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "-rxEfsw",
    "--strict-markers",
    "--tb=short",
    "--ignore=tests/data/",
    "--show-capture=no",
    # Folllowing plugins are normally not used, so we disable them to speed up pytest
    # startup time. They can be enabled temporarily when needed.
    "-pno:anyio",
    "-pno:mock",
    "-pno:profiling",
    "-pno:random_order",
    # "--random-order",
    # "--random-order-bucket=class",
]

python_classes = ["Describe*", "When*", "describe_*", "when_*"]
python_functions = ["it_*", "test_*", "then_*", "when_*"]
python_files = ["test_*", "*_spec.py", "*_test.py"]
spec_header_format = "{test_case}"
filterwarnings = ["ignore::DeprecationWarning"]


[tool.coverage.paths]
source = ["src"]


[tool.coverage.run]
branch = true
source = ["src", "tests"]


[tool.coverage.report]
show_missing = true
precision = 2
